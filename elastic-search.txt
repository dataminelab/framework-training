curl -L -O https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.4.zip
unzip elasticsearch-1.3.4.zip
cd  elasticsearch-1.3.4

# install UI marvel plugin
./bin/plugin -i elasticsearch/marvel/latest

# to avoid problems change cluster name
vi ./config/elasticsearch.yml
cluster:
  name: <NAME OF YOUR CLUSTER>
# see: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/setup-configuration.html

# run as a daemon
./bin/elasticsearch -d


# test it
curl 'http://localhost:9200/?pretty'

# example - count number of documents in a cluster
curl -XGET 'http://localhost:9200/_count?pretty' -d '
{  
    "query": {
        "match_all": {}
    }
}

# open port 9200


# manage throught Marvel
http://host:9200/_plugin/marvel/sense/index.html

ie:

http://ec2-54-237-85-23.compute-1.amazonaws.com:9200/_plugin/marvel/sense/index.html

# sample database

PUT /megacorp/employee/1
{
    "first_name" : "John",
    "last_name" :  "Smith",
    "age" :        25,
    "about" :      "I love to go rock climbing",
    "interests": [ "sports", "music" ]
}

# index: megacorp
# type: employee


PUT /megacorp/employee/2
{
    "first_name" : "Alan",
    "last_name" :  "Shephard",
    "age" :        36,
    "about" :      "I eat pizza every day",
    "interests": [ "coffee", "pizza" ]
}

PUT /megacorp/employee/3
{
    "first_name" :  "Jane",
    "last_name" :   "Smith",
    "age" :         32,
    "about" :       "I like to collect rock albums",
    "interests":  [ "music" ]
}

# we have a NoSQL database!
GET /megacorp/employee/1

# get all records
GET /megacorp/employee/_search

# fina a specific record
GET /megacorp/employee/_search?q=last_name:Smith

# we can used query DSL
GET /megacorp/employee/_search
{
    "query" : {
        "match" : {
            "last_name" : "Smith"
        }
    }
}

# and more complex

GET /megacorp/employee/_search
{
    "query" : {
        "filtered" : {
            "filter" : {
                "range" : {
                    "age" : { "gt" : 30 } 
                }
            },
            "query" : {
                "match" : {
                    "last_name" : "smith" 
                }
            }
        }
    }
}

# full text search

GET /megacorp/employee/_search
{
    "query" : {
        "match" : {
            "about" : "rock climbing"
        }
    }
}

# exact match

GET /megacorp/employee/_search
{
    "query" : {
        "match_phrase" : {
            "about" : "rock climbing"
        }
    }
}

# partial update

GET /megacorp/employee/2

POST /megacorp/employee/2/_update
{
   "doc" : {
     "age" :         32,
     "about" :       "I became vegeterian"
   }
}

GET /megacorp/employee/2


# see more at: http://www.elasticsearch.org/guide/en/elasticsearch/guide/current/index.html

git clone https://github.com/andrewvc/ee-datasets.git
cd ee-datasets/
java -jar elastic-loader.jar http://localhost:9200 datasets/darwin-origin.eloader
# source code: https://github.com/andrewvc/elastic-loader

POST darwin-origin/chapter/_search?pretty=true
{
  "query": {
   "match": {"text": "beagle"}
  },
  "fields": ["numeral", "title"],
  "highlight": {
    "fields": {"text": {"number_of_fragments": 3}}
  }
}

# See head plugin
./bin/plugin -install mobz/elasticsearch-head
# open: http://localhost:9200/_plugin/head/

# http://mobz.github.io/elasticsearch-head/


Advanced:
* Architecture
* Cluster setup
* Backups: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-snapshots.html

